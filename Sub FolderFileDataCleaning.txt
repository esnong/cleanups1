Sub TransformEDBClaimSummary()

    Dim wsSource As Worksheet
    Dim wsDest As Worksheet
    Dim lastRow As Long, destRow As Long
    Dim sourceRow As Long, col As Integer
    Dim entityType As String, mappedEntity As String, groupName As String
    Dim year As Variant, value As Variant, localForeign As String
    Dim entityMap As Object
    Dim yearColStart As Integer, yearColEnd As Integer
    Dim tblRange As Range

    ' Define mapping
    Set entityMap = CreateObject("Scripting.Dictionary")
    entityMap.Add "- PWCS", Array("PWCS CAS", "PWCS")
    entityMap.Add "- PWCS (SHQ)", Array("PWCS SHQ", "PWCS")
    entityMap.Add "- TOS", Array("TOS", "TOS")
    entityMap.Add "- ESA", Array("ESA", "ESA")
    entityMap.Add "PWS - STA AMO", Array("STA AMO", "STA")
    entityMap.Add "PWS - STA ASE", Array("STA ASE", "STA")

    ' Set source worksheet
    Set wsSource = ThisWorkbook.Sheets("EDB Claim summary")

    ' Delete existing destination sheet if it exists
    On Error Resume Next
    Application.DisplayAlerts = False
    Worksheets("Transformed Data").Delete
    Application.DisplayAlerts = True
    On Error GoTo 0

    ' Create new destination worksheet
    Set wsDest = ThisWorkbook.Sheets.Add
    wsDest.Name = "Transformed Data"

    ' Headers for destination sheet
    wsDest.Range("A1:E1").Value = Array("Entity", "Group", "Local/Foreigner", "Value", "Year")
    destRow = 2

    ' Define year columns (E to I = columns 5 to 9)
    yearColStart = 5
    yearColEnd = 9

    lastRow = wsSource.Cells(wsSource.Rows.Count, "A").End(xlUp).Row

    ' Loop through source data
    For sourceRow = 2 To lastRow
        entityType = Trim(wsSource.Cells(sourceRow, 1).Value)

        If entityMap.exists(entityType) Then
            mappedEntity = entityMap(entityType)(0)
            groupName = entityMap(entityType)(1)
            localForeign = wsSource.Cells(sourceRow, 2).Value

            For col = yearColStart To yearColEnd
                value = wsSource.Cells(sourceRow, col).Value
                year = wsSource.Cells(1, col).Value

                ' Only write if value is not empty
                If Not IsEmpty(value) Then
                    wsDest.Cells(destRow, 1).Value = mappedEntity
                    wsDest.Cells(destRow, 2).Value = groupName
                    wsDest.Cells(destRow, 3).Value = localForeign
                    wsDest.Cells(destRow, 4).Value = value
                    wsDest.Cells(destRow, 5).Value = year
                    destRow = destRow + 1
                End If
            Next col
        End If
    Next sourceRow

    ' Convert output to a table
    Set tblRange = wsDest.Range("A1").CurrentRegion
    wsDest.ListObjects.Add(xlSrcRange, tblRange, , xlYes).Name = "TransformedTable"

    MsgBox "Transformation complete! Check the 'Transformed Data' sheet."

End Sub
